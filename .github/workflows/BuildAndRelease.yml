name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    outputs:
      artifact-path: ${{ steps.package.outputs.artifact-path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: C:\Users\runneradmin\.nuget\packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.vcxproj') }}
          restore-keys: |
            nuget-${{ runner.os }}

      - name: Build all solutions
        shell: powershell
        run: |
          $msbuild = "C:\Program Files\Microsoft Visual Studio\Preview\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe"
          Get-ChildItem -Path . -Recurse -Filter *.sln | ForEach-Object {
            & $msbuild $_.FullName /p:Configuration=Release /m
          }

      - name: Package executables
        id: package
        run: |
          $outDir = "build_output"
          if(Test-Path $outDir){ Remove-Item $outDir -Recurse -Force }
          New-Item -ItemType Directory -Path $outDir | Out-Null
          # Предполагается, что исполняемые файлы лежат в подпапках bin\Release рядом с .vcxproj
          Get-ChildItem -Path . -Recurse -Include *.exe | ForEach-Object {
            Copy-Item $_.FullName -Destination $outDir -Force
          }
          Compress-Archive -Path $outDir\* -DestinationPath build_output.zip
          Write-Output "build_output.zip" > artifact.txt
          cat artifact.txt
        shell: powershell

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build_output
          path: build_output.zip

  release:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build_output
          path: .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build_output.zip
          asset_name: build_output.zip
          asset_content_type: application/zip
